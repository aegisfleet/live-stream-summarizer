name: Update Stream Summaries

on:
  schedule:
    - cron: '0 17,20,23,2,5,8,11,14 * * *' # JST 02:00, 05:00, 08:00, 11:00, 14:00, 17:00, 20:00, 23:00
  workflow_dispatch:
    inputs:
      videoId:
        description: 'Target videoId'
        type: string
        required: false
      skip_fetch_schedule:
        description: 'Skip Fetch schedule'
        type: boolean
        required: false
        default: false
      skip_check_archives:
        description: 'Skip Check archives'
        type: boolean
        required: false
        default: false
      skip_generate_summaries:
        description: 'Skip Generate summaries'
        type: boolean
        required: false
        default: false
      test_push_notification:
        description: 'Test Push Notification'
        type: boolean
        required: false
        default: false

concurrency:
  group: update-summaries

jobs:
  update-summaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リポジトリへのコミット・プッシュに必要
      issues: write  # GitHub Scriptでissueを作成するために必要

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Fetch schedule
        if: ${{ github.event.inputs.skip_fetch_schedule != 'true' }}
        run: npm run fetch-schedule

      - name: Check archives
        if: ${{ github.event.inputs.skip_check_archives != 'true' }}
        run: npm run check-archive
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

      - name: Generate summaries
        if: ${{ github.event.inputs.skip_generate_summaries != 'true' }}
        run: |
          if [ -n "${{ github.event.inputs.videoId }}" ]; then
            npm run summarize -- ${{ github.event.inputs.videoId }}
          else
            npm run summarize
          fi
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Generate individual pages
        run: npm run generate-pages
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

      - name: Check for new summaries
        id: check_summaries
        run: |
          # Get summary count from HEAD. If the file doesn't exist, count is 0.
          OLD_COUNT=$(git show HEAD:src/data/summaries.json 2>/dev/null | jq 'length' || echo 0)
          # Get summary count from current file
          NEW_COUNT=$(jq 'length' src/data/summaries.json)

          echo "OLD_COUNT: $OLD_COUNT"
          echo "NEW_COUNT: $NEW_COUNT"

          if [ "$NEW_COUNT" -gt "$OLD_COUNT" ]; then
            echo "has_new_summaries=true" >> $GITHUB_OUTPUT
          else
            echo "has_new_summaries=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: ${{ github.event.inputs.test_push_notification != 'true' }}
        run: |
          bash ./scripts/commit-changes.sh "chore: Update stream summaries and generate pages"

      - name: Deploy to GitHub Pages
        if: ${{ github.event.inputs.test_push_notification != 'true' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./src

      - name: Send Push Notification
        if: ${{ steps.check_summaries.outputs.has_new_summaries == 'true' || github.event.inputs.test_push_notification == 'true' }}
        run: |
          LATEST_TITLE=$(jq -r '.[0].title' src/data/summaries.json)
          LATEST_STREAMER=$(jq -r '.[0].streamer' src/data/summaries.json)
          LATEST_VIDEO_ID=$(jq -r '.[0].videoId' src/data/summaries.json)
          PAGE_URL="https://aegisfleet.github.io/live-stream-summarizer/pages/${LATEST_VIDEO_ID}.html"

          JSON_PAYLOAD=$(jq -n \
            --arg title "更新情報 ${LATEST_STREAMER}" \
            --arg body "${LATEST_TITLE}" \
            --arg icon "https://aegisfleet.github.io/live-stream-summarizer/images/character.png" \
            --arg url "${PAGE_URL}" \
            '{ "title": $title, "body": $body, "icon": $icon, "url": $url }')

          curl -X POST \
            "${{ secrets.CF_WORKER_URL }}/send-notification" \
            -H "Authorization: Bearer ${{ secrets.CF_AUTH_KEY }}" \
            -H "Content-Type: application/json" \
            --data-raw "${JSON_PAYLOAD}"

      - name: Check for failures
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Workflow Failure: Update Stream Summaries',
              body: `Workflow failed at ${new Date().toISOString()}\nSee: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            })
