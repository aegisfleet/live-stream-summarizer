name: Update Stream Summaries

on:
  schedule:
    - cron: '0 17,20,23,2,5,8,11,14 * * *' # JST 02:00, 05:00, 08:00, 11:00, 14:00, 17:00, 20:00, 23:00
  workflow_dispatch:
    inputs:
      videoId:
        description: 'Target videoId'
        type: string
        required: false
      skip_fetch_schedule:
        description: 'Skip Fetch schedule'
        type: boolean
        required: false
        default: false
      skip_check_archives:
        description: 'Skip Check archives'
        type: boolean
        required: false
        default: false
      skip_generate_summaries:
        description: 'Skip Generate summaries'
        type: boolean
        required: false
        default: false

concurrency:
  group: update-summaries

jobs:
  update-summaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リポジトリへのコミット・プッシュに必要
      issues: write  # GitHub Scriptでissueを作成するために必要

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Fetch schedule
        if: ${{ github.event.inputs.skip_fetch_schedule != 'true' }}
        run: npm run fetch-schedule

      - name: Check archives
        if: ${{ github.event.inputs.skip_check_archives != 'true' }}
        run: npm run check-archive
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

      - name: Generate summaries
        if: ${{ github.event.inputs.skip_generate_summaries != 'true' }}
        run: |
          if [ -n "${{ github.event.inputs.videoId }}" ]; then
            npm run summarize -- --videoId=${{ github.event.inputs.videoId }}
          else
            npm run summarize
          fi
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Generate individual pages
        run: npm run generate-pages
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

      - name: Commit and push changes
        run: |
          bash ./scripts/commit-changes.sh "chore: Update stream summaries and generate pages"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./src

      - name: Check for failures
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Workflow Failure: Update Stream Summaries',
              body: `Workflow failed at ${new Date().toISOString()}\nSee: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            })
